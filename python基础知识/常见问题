# 常见问题汇总

## numpy

### 选取行列

```python
df[a:b,c:d]
```

获取第(a,b]行，第(c,d]列的数据。
因为从0行0列开始，准确来说是左闭右开(a,b]；但是0行代表第一行

```python
#例如
test = test[0:1000]
```

获取表中前1000行的数据

### 返回匹配字符的行

#### 模糊匹配 .str.contains()

字段中包含这个词就可以，搭配正则表达式可以更棒哦！

```python
df = df[df['列名'].str.contains('a'|'b')
```

这是一种对字符串的匹配（只有字符串才有部分匹配的意思）

### 精准匹配 .isin()

单个匹配可以直接用 == 来实现
这个功能基本上等于sql的where xxx in ('a','b')
in 在一个list中
所以也可以直接 .isin(list)
例如

```python
df = df[df['searchKeyword'].isin(list)
```

## 字符串to变量名 locals()['a1']

通过这种方法，可以把字符串变成变量名，就可以实现通过变量来表示变量名（草！太难解释了）
具体来说
原来变量名是不能用变量表示的，但是字符串/数字可以
如果我需要一组有规律的、统一操作的变量名，比如a1 = 1,a2 = 2,a3 = 3,.....,我希望可以用循环实现，而不是打N遍
等号右边是直接可以在for循环内实现的，但是变量名怎么进入for循环？
那我们可以把变量名先用字符串表示出来，再转化成变量名
例如实现上面的需求

```python
for i in range(1,10):  locals()['a'+str(i)] = i
```

这样就实现了写十条的操作。
有两个注意事项：1、一般这种变量需求是字符+变化的数字，字符用+结合就可以；2、for循环里，多用到数值（直接用range等就ok），那么在+的时候要把数值先变成字符串str(数值)
